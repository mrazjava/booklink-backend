name: web-master

on:
  push:
    branches:
      - master
    tags:
      - v1
    paths:
      - 'booklink-web/**'
jobs:
  build-and-publish:
    name: build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Node build
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Building Frontend
        working-directory: booklink-web
        run: |
          npm install
          yarn lint
          yarn build
      - name: Preparing Docker Image
        working-directory: booklink-web
        run: |
          docker build -t docker.pkg.github.com/mrazjava/booklink/web-master .
          docker tag docker.pkg.github.com/mrazjava/booklink/web-master docker.io/mrazjava/booklink-web-master
      - name: Pushing image to Github Packages
        run: |
          docker login -u mrazjava -p ${{ secrets.GITHUB_PACKAGES }} docker.pkg.github.com
          docker push docker.pkg.github.com/mrazjava/booklink/web-master
      - name: Push image to dockerhub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_LOGIN }} -p ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          docker push docker.io/mrazjava/booklink-web-master
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to AWS
    needs: build-and-publish
    steps:
      - name: Pull latest image from Github Packages
        id: pull-image-from-github
        run: |
          # pull image we just built from github packages
          docker login -u mrazjava -p ${{ secrets.GITHUB_PACKAGES }} docker.pkg.github.com
          docker pull docker.pkg.github.com/mrazjava/booklink/web-master
      - name: Checkout pipeline commit
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.1.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.0.3
      - name: Push image to Amazon ECR
        id: push-image-to-aws
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: booklink-web
        run: |
          # Push image to ECR so that it can be deployed to ECS.
          docker tag docker.pkg.github.com/mrazjava/booklink/web-master $ECR_REGISTRY/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.0.2
        with:
          task-definition: .aws/web-pre.json
          container-name: booklink-web-contr
          image: ${{ steps.push-image-to-aws.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.0.3
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: booklink-web-svc
          cluster: booklink-ec2lx-cluster
          wait-for-service-stability: false
