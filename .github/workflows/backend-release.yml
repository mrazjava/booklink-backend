name: backend-release
#-$(echo `date '+%Y%m%d%H%M%S'`)
on:
  push:
    branches:
      - master
    tags:
      - v1
    paths:
      - 'booklink-backend/*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to AWS
    needs: publish
    steps:
      - name: Pull img from Github Packages
        id: pull-image-from-github
        run: |
          # pull image we just built from github packages
          docker login -u mrazjava -p ${{ secrets.GITHUB_PACKAGES }} docker.pkg.github.com
          docker pull docker.pkg.github.com/mrazjava/booklink/backend-master
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push image to Amazon ECR
        id: push-image-to-aws
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: booklink-backend
        run: |
          # Push image to ECR so that it can be deployed to ECS.
          docker tag docker.pkg.github.com/mrazjava/booklink/backend-master $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/backend-task-definition.json
          container-name: booklink-backend-contr
          image: ${{ steps.push-image-to-aws.outputs.image }}
          tags[0]: foo=bar
          tags[1]: pico=nano
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: booklink-backend-svc
          cluster: booklink-ec2lx-cluster
          wait-for-service-stability: true

# enable ssh session to debug actions runner
# https://github.com/marketplace/actions/debugging-with-tmate
#    steps:
#      - uses: actions/checkout@v1
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v1
